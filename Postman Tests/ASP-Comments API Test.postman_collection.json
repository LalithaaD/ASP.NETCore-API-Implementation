{
	"info": {
		"_postman_id": "26ec6d3f-80d8-4e00-a0dd-9d9381754660",
		"name": "ASP-Comments API Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33511578"
	},
	"item": [
		{
			"name": "GET Comment API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Read Comment\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.json;\r",
							"\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.be.an(\"array\");\r",
							"    pm.expect(responseBody).to.have.lengthOf.at.least(1);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7254/api/Comment",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7254",
					"path": [
						"api",
						"Comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Comment API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test for status code 201 (Created)\r",
							"pm.test('Status code is 201', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"// Test for response type JSON\r",
							"pm.test('Response is of type JSON', function () {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"});\r",
							"\r",
							"// Test for the correct status code and structure of the response\r",
							"pm.test('Create Comment', function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.productId).to.eql(1); // Assuming the product ID matches the one in the request body\r",
							"    pm.expect(responseBody.userId).to.eql(1); // Assuming the user ID matches the one in the request body\r",
							"    pm.expect(responseBody.rating).to.eql(5); // Assuming the rating matches the one in the request body\r",
							"    pm.expect(responseBody.image).to.eql(\"example_image.jpg\"); // Assuming the image matches the one in the request body\r",
							"    pm.expect(responseBody.text).to.eql(\"This is a test comment.\"); // Assuming the text matches the one in the request body\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"productId\": 1,\r\n  \"userId\": 1,\r\n  \"rating\": 5,\r\n  \"image\": \"example_image.jpg\",\r\n  \"text\": \"This is a test comment.\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7254/api/Comment",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7254",
					"path": [
						"api",
						"Comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT Comment API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404', function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test('Response is of type JSON', function () {",
							"    var contentTypeHeader = pm.response.headers.get('Content-Type');",
							"    if (!contentTypeHeader) {",
							"        pm.expect(contentTypeHeader).to.not.exist; // Ensure Content-Type header does not exist",
							"    } else {",
							"        pm.expect(contentTypeHeader.includes('application/json')).to.be.true; // Check if Content-Type includes JSON",
							"    }",
							"});",
							"",
							"pm.test(\"Comment updated successfully\", function () {",
							"    const responseBody = pm.response.text(); // Retrieve response body as text",
							"    pm.expect(responseBody).to.not.include(\"Comment updated successfully\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"productId\": 1,\r\n  \"userId\": 1,\r\n  \"rating\": 5,\r\n  \"image\": \"example_image.jpg\",\r\n  \"text\": \"This is a test comment.\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7254/api/Comment/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7254",
					"path": [
						"api",
						"Comment",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Comment API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test for status code 404 (Not Found)\r",
							"pm.test('Status code is 404', function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"// Test for empty response body\r",
							"pm.test('Delete Comment', function () {\r",
							"    pm.expect(pm.response.text()).to.be.empty; // Check if response body is empty\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7254/api/Comment/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7254",
					"path": [
						"api",
						"Comment",
						"1"
					]
				}
			},
			"response": []
		}
	]
}